% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.SPQR.R
\name{cv.SPQR}
\alias{cv.SPQR}
\title{cross-validation for SPQR}
\usage{
cv.SPQR(
  X,
  Y,
  folds = NULL,
  n.knots = 12,
  n.hidden = 10,
  activation = c("tanh", "relu", "sigmoid"),
  method = c("MLE", "MAP"),
  prior = c("GP", "ARD", "GSM"),
  hyperpar = list(),
  control = list(),
  normalize = FALSE,
  verbose = TRUE,
  seed = NULL,
  ...
)
}
\arguments{
\item{X}{The covariate matrix (without intercept column)}

\item{Y}{The response vector.}

\item{folds}{A list of CV folds, possibly that generated from \code{createFolds.SPQR()}.}

\item{n.knots}{The number of basis functions. Default: 10.}

\item{n.hidden}{A vector specifying the number of hidden neurons in each hidden layer. Default: 10.}

\item{activation}{The hidden layer activation. Either \code{"tanh"} (default) or \code{"relu"}.}

\item{method}{Method for estimating SPQR. One of \code{"MLE"}, \code{"MAP"} (default) or \code{"MCMC"}.}

\item{prior}{The prior model for variance hyperparameters. One of \code{"GP"}, \code{"ARD"} (default) or \code{"GSM"}.}

\item{hyperpar}{A list of named hyper-prior hyperparameters to use instead of the default values, including
\code{a_lambda}, \code{b_lambda}, \code{a_sigma} and \code{b_sigma}. The default value is 0.001 for all four
hyperparameters.}

\item{control}{A list of named and method-dependent parameters that allows finer
control of the behavior of the computational approaches. See \code{SPQR()} for all available
parameters and their default values.}

\item{normalize}{If \code{TRUE}, all covariates will be normalized to take values between [0,1].}

\item{verbose}{If \code{TRUE} (default), training progress will be printed.}

\item{seed}{Random number generation seed.}

\item{...}{other parameters to pass to \code{control}.}
}
\value{
A named list including the following components:
\item{control}{the list of all control parameters.}
\item{cve}{the cross-validation error.}
\item{folds}{the CV folds.}
}
\description{
Fits SPQR using either MLE or MAP method. Computes K-fold cross-validation error
based on pre-computed folds. The arguments are mostly the same as in \code{SPQR()}
except for an additional \code{folds} argument that takes pre-computed CV folds.
}
\examples{
\dontrun{
set.seed(919)
n <- 1000
X <- rbinom(n, 1, 0.5)
Y <- rnorm(n, X, 0.8)
folds <- createFolds.SPQR(Y, nfold = 5)

## hyperparameter tuning using 5 fold cross-validation
control <- list(batch.size = 256, epochs = 500, use.GPU=TRUE)
lr.grid <- exp(-5:-3)
cve <- sapply(lr.grid, FUN=function(lr) {
control$lr <- lr
cv.out <- cv.SPQR(X=X, Y=Y, folds=folds, method="MLE",
                  control=control)
c(lr, cv.out$cve)
})
}

}
